# .NET Core
bin/
obj/
.vs/
.vscode/
*.user
*.suo
*.userosscache
*.sln.docstates
*.userprefs
*.dbmdl
*.pfx
*.publish.xml
*.ncrunchsolution
*.ncrunchproject
*.ncrunchproject.*
*.DotSettings
*.DotSettings.user

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
msbuild.log
msbuild.err
msbuild.wrn

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# ReSharper
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# Local development settings
local.settings.json

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# xUnit
xunit.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/

# NuGet Packages
*.nupkg
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# .NET Core
project.lock.json
project.fragment.lock.json
tools/

# TFS 2012 Local Workspace
$tf/

# TEE GIT client
*.tfignore

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/
myplan/myplan.md
